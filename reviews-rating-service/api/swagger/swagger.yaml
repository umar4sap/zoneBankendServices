swagger: "2.0"
info:
  description: "Review and rating services"
  version: "1.0"
  title: "TL Review and rating services"
  contact:
    name:  Veegam API Support
    email: umar@qloudable.com
basePath: "/v2/components/reviews-service"
schemes:
- "http"
securityDefinitions:
  UserSecurity:
    type: apiKey
    in: header
    name: Authorization

paths:
  /component/{componentId}/reviews:
    get:
      tags:
      - "public reviews"
      summary: "Get all reviews"
      description: "Get all reviews"
      operationId: "getComponentReviews"   
      produces:
      - "application/json"
      parameters:
      - name: "componentId"
        in: "path"
        description: "componentId"
        required: true
        type: "string"
      responses:
        200:
          description: "A list of reviews."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
      
    post:
      tags:
      - "public reviews"
      summary: "Post a review."
      description: "user can post a  review"
      operationId: "postReview"
      produces:
      - "application/json"
      parameters: 
      - name: "componentId"
        in: "path"
        description: "componentId"
        required: true
        type: "string"
      - name: "user_access"
        in: "header"
        description: "user_access"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/reviews"
      responses:
        200:
          description: "reviews details"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error creating a new publishers"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  /component/{componentId}/ratings:
    get:
      tags:
      - "public rating"
      summary: "Get all rating"
      description: "Get all rating"
      operationId: "getComponentRatings"   
      produces:
      - "application/json"
      parameters:
      - name: "componentId"
        in: "path"
        description: "componentId"
        required: true
        type: "string"
      responses:
        200:
          description: "A list of reviews."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  /ratings/authors/{authorId}:
    get:
      tags:
      - "public rating"
      summary: "Get all rating"
      description: "Get all rating"
      operationId: "getAuthorRatings"   
      produces:
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "authorId"
        required: true
        type: "string"
      responses:
        200:
          description: "A list of reviews."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  /orgs/{orgId}/component/{componentId}/reviews/{reviewId}:
    put:
      tags:
      - "Publisher level"
      summary: "Update a review."
      description: "publisher will be able to replay to review"
      operationId: "replayReview"
      security: 
        - UserSecurity: [] 
      produces:
      - "application/json"
      parameters: 
      - name: "orgId"
        in: "path"
        description: "org id"
        required: true
        type: "string"
      - name: "reviewId"
        in: "path"
        description: "reviewId to be updated"
        required: true
        type: "string"
      - name: "componentId"
        in: "path"
        description: "linked componentId"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "publishers replay review details that need to be added to the system."
        required: true
        schema:
          $ref: "#/definitions/reviews"
      responses:
        200:
          description: "reviews details"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error update reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
    delete:
      tags:
      - "admin level reviews"
      summary: "Update a review."
      description: "publisher will be able to replay to review"
      operationId: "deleteReview"
      security: 
        - UserSecurity: [] 
      produces:
      - "application/json"
      parameters: 
      - name: "orgId"
        in: "path"
        description: "org id"
        required: true
        type: "string"
      - name: "reviewId"
        in: "path"
        description: "reviewId to be updated"
        required: true
        type: "string"
      - name: "componentId"
        in: "path"
        description: "linked componentId"
        required: true
        type: "string"
      responses:
        200:
          description: "reviews details"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error update reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  
  /component/{componentId}/reviews/{reviewId}:
    get:
      tags:
      - "public reviews"
      summary: "get a review."
      description: "publisher will be able to see"
      operationId: "getReview"
      produces:
      - "application/json"
      parameters: 
      - name: "reviewId"
        in: "path"
        description: "reviewId to be updated"
        required: true
        type: "string"
      - name: "componentId"
        in: "path"
        description: "linked componentId"
        required: true
        type: "string"
      responses:
        200:
          description: "reviews details"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error update reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  /orgs/{orgId}/component/reviews/{startfrom}:
    get:
      tags:
      - "admin level reviews"
      summary: "get all a review for all component."
      description: "admin will be able to see all reviews"
      operationId: "getComponentsReviewsAll"
      security: 
        - UserSecurity: []
      produces:
      - "application/json"
      parameters: 
      - name: "orgId"
        in: "path"
        description: "orgId to be updated"
        required: true
        type: "string"
      - name: "startfrom"
        in: "path"
        description: "startfrom to be updated"
        required: true
        type: "string"
      responses:
        200:
          description: "get all reviews to approval"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error update reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  /orgs/{orgId}/component/{componentId}/reviews/{reviewId}/approval:
    patch:
      tags:
      - "admin level reviews"
      summary: "approve or reject a review."
      description: "Admin will be able to replay to review"
      operationId: "publishReview"
      security: 
        - UserSecurity: [] 
      produces:
      - "application/json"
      parameters: 
      - name: "reviewId"
        in: "path"
        description: "reviewId to be updated"
        required: true
        type: "string"
      - name: "orgId"
        in: "path"
        description: "orgId to be updated"
        required: true
        type: "string"
      - name: "componentId"
        in: "path"
        description: "linked componentId"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "publishers replay review details that need to be added to the system."
        required: true
        schema:
          $ref: "#/definitions/reviews"
      responses:
        200:
          description: "reviews details"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error update reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
      
  /component/{componentId}/user/{userId}:
    put:
      tags:
      - "User reviews"
      summary: "update a review."
      description: "publisher will be able to see"
      operationId: "updateUserReview"
      produces:
      - "application/json"
      parameters: 
      - name: "userId"
        in: "path"
        description: "userId to be updated"
        required: true
        type: "string"
      - name: "componentId"
        in: "path"
        description: "linked componentId"
        required: true
        type: "string"
      - name: "user_access"
        in: "header"
        description: "user_access"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/reviews"
      responses:
        200:
          description: "reviews details"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error update reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  
    get:
      tags:
      - "User reviews"
      summary: "get a review."
      description: "publisher will be able to see"
      operationId: "getUserReview"
      produces:
      - "application/json"
      parameters: 
      - name: "userId"
        in: "path"
        description: "userId to get"
        required: true
        type: "string"
      - name: "componentId"
        in: "path"
        description: "linked componentId"
        required: true
        type: "string"
      - name: "user_access"
        in: "header"
        description: "user_access"
        required: true
        type: "string"
      responses:
        200:
          description: "reviews details"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Error update reviews"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "ReviewsRateService"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:  
  reviews:
    type: "object" 
